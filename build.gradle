buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.12.0"
        classpath "de.marcphilipp.gradle:nexus-publish-plugin:0.1.1"
    }
}

apply plugin: 'io.codearte.nexus-staging'

subprojects {
    version = VERSION_NAME
    group = GROUP
    buildDir = "${project.rootDir}/build/ct4j/${project.name}"
    apply plugin: 'java'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    uploadArchives.enabled = false


    tasks.withType(Test) {

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

wrapper {
    gradleVersion = '4.10.2'
}

// ------------------------------------------------
//
// Publish to maven central
//
// ------------------------------------------------


def pomDescription= [ct4j:'Cluster tasks for java - Core', "ct4j-spring-boot":"Cluster tasks for java - Spring boot support"]

["ct4j", "ct4j-spring-boot"].each {

    project(":$it") {


        apply plugin: 'maven'
        apply plugin: 'maven-publish'
        apply plugin: "java-library"
        apply plugin: "de.marcphilipp.nexus-publish"

        if (System.getenv('SONATYPE_USERNAME')) {

            apply plugin: 'signing'

            def gpgKeyLocation = System.getenv('GPG_KEY_LOCATION')
            def sonaTypeUsername = System.getenv('SONATYPE_USERNAME')
            def sonaTypepassword = System.getenv('SONATYPE_PASSWORD')


            nexusStaging {
                packageGroup = "com.whiletrue"
                username = sonaTypeUsername
                password = sonaTypepassword
            }

            task javadocJar(type: Jar) {
                classifier = 'javadoc'
                from javadoc
            }

            task sourcesJar(type: Jar) {
                classifier = 'sources'
                from sourceSets.main.allSource
            }

            publishing {
                publications {
                    mavenJava(MavenPublication) {
                        from components.java
                        artifact sourcesJar
                        artifact javadocJar


                        pom {
                            name = project.name
                            packaging = 'jar'
                            description = pomDescription[project.name]

                            url = 'https://github.com/bh213/ct4j'
                            scm {
                                connection = 'scm:git:https://github.com/bh213/ct4j.git'
                                developerConnection = 'scm:git:git@github.com:bh213/ct4j.git'
                                url = 'https://github.com/bh213/ct4j.git'
                            }

                            licenses {
                                license {
                                    name = 'MIT'
                                    url = 'https://opensource.org/licenses/MIT'
                                    distribution = 'repo'
                                }
                            }

                            developers {
                                developer {
                                    id = 'bh213'
                                    name = 'Gorazd Breskvar'
                                    email = 'gorazd.breskvar@whiletrue.com'
                                }
                            }
                        }
                    }
                }
            }

            nexusPublishing {
                packageGroup = "com.whiletrue"
                username = sonaTypeUsername
                password = sonaTypepassword
            }

            uploadArchives.enabled = true

            ext."signing.keyId" = System.getenv('GPG_KEY_ID')
            ext."signing.secretKeyRingFile" = "${project.rootDir}/${gpgKeyLocation}"
            ext."signing.password" = System.getenv('GPG_PASSPHRASE')

            signing {
                sign publishing.publications.mavenJava
            }


        }
    }
}






